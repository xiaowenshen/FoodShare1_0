using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using FoodShareDAL;
using FoodShareMODEL;
using System.Data.SqlClient;
namespace FoodShareDAL
{
    /// <summary>
    /// 数据访问类:CookBook
    /// </summary>
    public partial class CookBookDAL
    {
        public CookBookDAL()
        { }




        /// <summary>
        /// 增加一条数据
        /// </summary>
        public bool Add(CookBook model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into CookBook(");
            strSql.Append("CId,CTitle,CIntroduce,CContent,stepcount,isdel,addtime,UId)");
            strSql.Append(" values (");
            strSql.Append("@CId,@CTitle,@CIntroduce,@CContent,@stepcount,@isdel,@addtime,@UId)");
            SqlParameter[] parameters = {
					new SqlParameter("@CId", SqlDbType.Int,4),
					new SqlParameter("@CTitle", SqlDbType.NVarChar,50),
					new SqlParameter("@CIntroduce", SqlDbType.NVarChar,150),
					new SqlParameter("@CContent", SqlDbType.NVarChar,150),
					new SqlParameter("@stepcount", SqlDbType.Int,4),
					new SqlParameter("@isdel", SqlDbType.Bit,1),
					new SqlParameter("@addtime", SqlDbType.DateTime),
					new SqlParameter("@UId", SqlDbType.Int,4)};
            parameters[0].Value = model.CId;
            parameters[1].Value = model.CTitle;
            parameters[2].Value = model.CIntroduce;
            parameters[3].Value = model.CContent;
            parameters[4].Value = model.stepcount;
            parameters[5].Value = model.isdel;
            parameters[6].Value = model.addtime;
            parameters[7].Value = model.UId;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(CookBook model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update CookBook set ");
            strSql.Append("CId=@CId,");
            strSql.Append("CTitle=@CTitle,");
            strSql.Append("CIntroduce=@CIntroduce,");
            strSql.Append("CContent=@CContent,");
            strSql.Append("stepcount=@stepcount,");
            strSql.Append("isdel=@isdel,");
            strSql.Append("addtime=@addtime,");
            strSql.Append("UId=@UId");
            strSql.Append(" where ");
            SqlParameter[] parameters = {
					new SqlParameter("@CId", SqlDbType.Int,4),
					new SqlParameter("@CTitle", SqlDbType.NVarChar,50),
					new SqlParameter("@CIntroduce", SqlDbType.NVarChar,150),
					new SqlParameter("@CContent", SqlDbType.NVarChar,150),
					new SqlParameter("@stepcount", SqlDbType.Int,4),
					new SqlParameter("@isdel", SqlDbType.Bit,1),
					new SqlParameter("@addtime", SqlDbType.DateTime),
					new SqlParameter("@UId", SqlDbType.Int,4)};
            parameters[0].Value = model.CId;
            parameters[1].Value = model.CTitle;
            parameters[2].Value = model.CIntroduce;
            parameters[3].Value = model.CContent;
            parameters[4].Value = model.stepcount;
            parameters[5].Value = model.isdel;
            parameters[6].Value = model.addtime;
            parameters[7].Value = model.UId;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(int uid, int cid)
        {
            {
                StringBuilder strSql = new StringBuilder();
                strSql.Append("update FollowTable set ");
                strSql.Append("isdel=1 ");
                strSql.Append(" where ");
                strSql.Append("UId=@UId,");
                strSql.Append("CId=@CId,");
                SqlParameter[] parameters = {
					new SqlParameter("@UId", SqlDbType.Int,4),
                    new SqlParameter("@CId", SqlDbType.Int,4),

                                        };
                parameters[0].Value = uid;
                parameters[1].Value = cid;


                int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
                if (rows > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }


            ///// <summary>
            ///// 得到一个对象实体
            ///// </summary>
            //public CookBook GetModel()
            //{
            //    //该表无主键信息，请自定义主键/条件字段
            //    StringBuilder strSql=new StringBuilder();
            //    strSql.Append("select  top 1 CId,CTitle,CIntroduce,CContent,stepcount,isdel,addtime,UId from CookBook ");
            //    strSql.Append(" where ");
            //    SqlParameter[] parameters = {
            //    };

            //    Maticsoft.Model.CookBook model=new Maticsoft.Model.CookBook();
            //    DataSet ds=DbHelperSQL.Query(strSql.ToString(),parameters);
            //    if(ds.Tables[0].Rows.Count>0)
            //    {
            //        return DataRowToModel(ds.Tables[0].Rows[0]);
            //    }
            //    else
            //    {
            //        return null;
            //    }
            //}


            /// <summary>
            /// 得到一个对象实体
            /// </summary>
            //public Maticsoft.Model.CookBook DataRowToModel(DataRow row)
            //{
            //    Maticsoft.Model.CookBook model=new Maticsoft.Model.CookBook();
            //    if (row != null)
            //    {
            //        if(row["CId"]!=null && row["CId"].ToString()!="")
            //        {
            //            model.CId=int.Parse(row["CId"].ToString());
            //        }
            //        if(row["CTitle"]!=null)
            //        {
            //            model.CTitle=row["CTitle"].ToString();
            //        }
            //        if(row["CIntroduce"]!=null)
            //        {
            //            model.CIntroduce=row["CIntroduce"].ToString();
            //        }
            //        if(row["CContent"]!=null)
            //        {
            //            model.CContent=row["CContent"].ToString();
            //        }
            //        if(row["stepcount"]!=null && row["stepcount"].ToString()!="")
            //        {
            //            model.stepcount=int.Parse(row["stepcount"].ToString());
            //        }
            //        if(row["isdel"]!=null && row["isdel"].ToString()!="")
            //        {
            //            if((row["isdel"].ToString()=="1")||(row["isdel"].ToString().ToLower()=="true"))
            //            {
            //                model.isdel=true;
            //            }
            //            else
            //            {
            //                model.isdel=false;
            //            }
            //        }
            //        if(row["addtime"]!=null && row["addtime"].ToString()!="")
            //        {
            //            model.addtime=DateTime.Parse(row["addtime"].ToString());
            //        }
            //        if(row["UId"]!=null && row["UId"].ToString()!="")
            //        {
            //            model.UId=int.Parse(row["UId"].ToString());
            //        }
            //    }
            //    return model;
            //}

            /// <summary>
            /// 获得数据列表
            /// </summary>
            //public DataSet GetList(string strWhere)
            //{
            //    StringBuilder strSql=new StringBuilder();
            //    strSql.Append("select CId,CTitle,CIntroduce,CContent,stepcount,isdel,addtime,UId ");
            //    strSql.Append(" FROM CookBook ");
            //    if(strWhere.Trim()!="")
            //    {
            //        strSql.Append(" where "+strWhere);
            //    }
            //    return DbHelperSQL.(strSql.ToString());
            //}

            ///// <summary>
            ///// 获得前几行数据
            ///// </summary>
            //public DataSet GetList(int Top,string strWhere,string filedOrder)
            //{
            //    StringBuilder strSql=new StringBuilder();
            //    strSql.Append("select ");
            //    if(Top>0)
            //    {
            //        strSql.Append(" top "+Top.ToString());
            //    }
            //    strSql.Append(" CId,CTitle,CIntroduce,CContent,stepcount,isdel,addtime,UId ");
            //    strSql.Append(" FROM CookBook ");
            //    if(strWhere.Trim()!="")
            //    {
            //        strSql.Append(" where "+strWhere);
            //    }
            //    strSql.Append(" order by " + filedOrder);
            //    return DbHelperSQL.Query(strSql.ToString());
            //}

            ///// <summary>
            ///// 获取记录总数
            ///// </summary>
            //public int GetRecordCount(string strWhere)
            //{
            //    StringBuilder strSql=new StringBuilder();
            //    strSql.Append("select count(1) FROM CookBook ");
            //    if(strWhere.Trim()!="")
            //    {
            //        strSql.Append(" where "+strWhere);
            //    }
            //    object obj = DbHelperSQL.GetSingle(strSql.ToString());
            //    if (obj == null)
            //    {
            //        return 0;
            //    }
            //    else
            //    {
            //        return Convert.ToInt32(obj);
            //    }
            //}
            ///// <summary>
            ///// 分页获取数据列表
            ///// </summary>
            //public DataSet GetListByPage(string strWhere, string orderby, int startIndex, int endIndex)
            //{
            //    StringBuilder strSql=new StringBuilder();
            //    strSql.Append("SELECT * FROM ( ");
            //    strSql.Append(" SELECT ROW_NUMBER() OVER (");
            //    if (!string.IsNullOrEmpty(orderby.Trim()))
            //    {
            //        strSql.Append("order by T." + orderby );
            //    }
            //    else
            //    {
            //        strSql.Append("order by T. desc");
            //    }
            //    strSql.Append(")AS Row, T.*  from CookBook T ");
            //    if (!string.IsNullOrEmpty(strWhere.Trim()))
            //    {
            //        strSql.Append(" WHERE " + strWhere);
            //    }
            //    strSql.Append(" ) TT");
            //    strSql.AppendFormat(" WHERE TT.Row between {0} and {1}", startIndex, endIndex);
            //    return DbHelperSQL.Query(strSql.ToString());
            //}

            /*
            /// <summary>
            /// 分页获取数据列表
            /// </summary>
            public DataSet GetList(int PageSize,int PageIndex,string strWhere)
            {
                SqlParameter[] parameters = {
                        new SqlParameter("@tblName", SqlDbType.VarChar, 255),
                        new SqlParameter("@fldName", SqlDbType.VarChar, 255),
                        new SqlParameter("@PageSize", SqlDbType.Int),
                        new SqlParameter("@PageIndex", SqlDbType.Int),
                        new SqlParameter("@IsReCount", SqlDbType.Bit),
                        new SqlParameter("@OrderType", SqlDbType.Bit),
                        new SqlParameter("@strWhere", SqlDbType.VarChar,1000),
                        };
                parameters[0].Value = "CookBook";
                parameters[1].Value = "";
                parameters[2].Value = PageSize;
                parameters[3].Value = PageIndex;
                parameters[4].Value = 0;
                parameters[5].Value = 0;
                parameters[6].Value = strWhere;	
                return DbHelperSQL.RunProcedure("UP_GetRecordByPage",parameters,"ds");
            }*/


        }
    }
}

